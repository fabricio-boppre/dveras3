---
import BasicLayout from "@layouts/basicLayout.astro"
import PostsIndex from "@components/PostsIndex.astro"
import PaginationNav from "@components/PaginationNav.astro"
import config from "@config/config.json"
import { getCollection } from "astro:content"
import type { GetStaticPaths } from "astro"

// We use getStaticPaths() to divide the post collection into separate pages:
// - https://docs.astro.build/en/reference/routing-reference/#paginate
export const getStaticPaths = (async ({ paginate }) => {
  // Get all entries from blog collection (except the offline) and sort them by date:
  const posts = (
    await getCollection("blogCollection", ({ data }) => {
      return data.offline !== true
    })
  ).sort(
    (a, b) =>
      b.data.data_publicacao.getTime() - a.data.data_publicacao.getTime(),
  )

  // Return a paginated collection of paths for all items
  return paginate(posts, { pageSize: config.pagination })
}) satisfies GetStaticPaths

// For a specific page, we send meta info, the page prop, which contains posts data and pagination information for this page:
// - https://docs.astro.build/en/reference/routing-reference/#@he-pagination-page-prop
const { page } = Astro.props
const postsPerPage = page.data
const siteTitle = config.siteTitle
const siteDescription = config.siteDescription
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
---

<BasicLayout
  title={siteTitle}
  description={siteDescription}
  url={canonicalURL.href}
>
  <PostsIndex posts={postsPerPage} />
  <PaginationNav page={page} />
</BasicLayout>
