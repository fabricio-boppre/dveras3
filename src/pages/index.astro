---
import BasicLayout from "@layouts/basicLayout.astro"
import { css } from "@styled-system/css"
import { getCollection, getEntries, render } from "astro:content"
import "@fontsource-variable/roboto-serif"

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

// Get all entries from blog collection (except the offline) and sort them:
const posts = await getCollection("blogCollection", ({ data }) => {
  return data.offline !== true
})
posts.sort((a, b) => b.id.localeCompare(a.id))
---

<BasicLayout
  title="dveras em rede"
  description="Pai de dois rapazes, marido, jornalista, roteirista. Pernambucano de nascimento, filho de cearenses, potiguar e catarinense por adoção. Migrante - filho de todos os cantos e de canto nenhum."
  url={canonicalURL.href}
>
  {
    posts.map(async function (post) {
      const { Content } = await render(post)
      const relatedCategories = await getEntries(post.data.relatedCategorias)
      return (
        <article
          class={css({
            "&:not(&:last-child)": { borderBottom: "1px solid gray" },
            pt: "40px",
            pb: "40px",
          })}
        >
          <header>
            <div
              class={css({
                textStyle: "graySmallLabel",
              })}
            >
              {post.data.data_publicacao.toLocaleDateString("pt-BR")}
            </div>
            <h1
              class={css({
                textStyle: "h1Title",
                color: "basicText",
              })}
            >
              <a href={`/blog/${post.id}`}>{post.data.titulo}</a>
            </h1>
            <div class={css({ textStyle: "graySmallLabel" })}>
              {relatedCategories.map(function (categoria, index) {
                // prettier-ignore
                //  (to avoid white-spaces in the inline element below)
                return (
                <span>{index ? ", " : ""}<a class={css({ textDecoration: "underline" })} href={`/categoria/${categoria.id}`}>{categoria.data.titulo}</a></span>
              )
              })}
            </div>
          </header>
          <div
            class={css({
              textStyle: "body",
              color: "basicText",
              mt: "20px",
            })}
          >
            {post.data.modo_exibicao_index[0] == "descricao" ? (
              <p>{post.data.descricao}</p>
            ) : post.data.modo_exibicao_index[0] == "post_completo" ? (
              <Content />
            ) : (
              <img src={post.data.imagem_ilustrativa} alt={post.data.titulo} />
            )}
          </div>
        </article>
      )
    })
  }
</BasicLayout>
