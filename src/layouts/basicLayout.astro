---
import "@styles/index.css"
import { SEO } from "astro-seo"
import { css } from "@styled-system/css"
import { flex } from "@styled-system/patterns"
import "@fontsource-variable/noto-sans"
import ThemeManager from "@components/ThemeManager.astro"
import ThemeSelect from "@components/ThemeSelect.astro"
import { ClientRouter } from "astro:transitions"
import { getCollection } from "astro:content"

// Get all entries from categorias collection and sort them:
const categorias = await getCollection("categoriasCollection")
categorias.sort((a, b) => a.id.localeCompare(b.id))

// Checking if nofollow and nofollow are defined and send the meta info to layout template:
const noFollow = Astro.props.nofollow ? Astro.props.nofollow : Boolean(false)
const noIndex = Astro.props.noindex ? Astro.props.noindex : Boolean(false)
const { title, description, url } = Astro.props
---

<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <ThemeManager defaultTheme="auto" />
    <ClientRouter />
    <SEO
      title={title}
      nofollow={noFollow}
      noindex={noIndex}
      description={description}
      openGraph={{
        basic: {
          title: title,
          type: "website",
          url: url,
          image: Astro.site + "images/layout/logo-open-graph.png",
        },
        optional: {
          description: description,
        },
      }}
      twitter={{
        card: "summary_large_image",
      }}
      extend={{
        meta: [{ name: "title", content: title }],
      }}
    />
  </head>

  <body
    class={flex({
      bgColor: "mainBg",
      maxW: "1000px",
      m: "0 auto",
      px: "20px",
      minH: "100vh",
      flexDirection: "column",
      h: "100%",
    })}
  >
    <noscript>
      <div
        class={css({
          p: "40px",
          textAlign: "center",
          bgColor: "red.500",
          color: "white",
          textStyle: "article",
        })}
      >
        Para navegar neste site é necessário que você ative a funcionalidade
        JavaScript!
      </div>
    </noscript>

    <header
      class={flex({
        flex: "none",
        py: "40px",
        justifyContent: "space-between",
        alignItems: "center",
        flexDirection: { base: "column", md: "row" },
        borderBottom: "2px solid gray",
      })}
    >
      <a
        class={css({
          w: { base: "100%", md: "450px", lg: "500px" },
          h: "headerHeight",
          bgImage: "logo",
          bgSize: "contain",
          bgRepeat: "no-repeat",
          bgPosition: "center",
        })}
        href="/"
        ><h1 hidden>dveras em rede</h1>
      </a>
      <div
        id="options"
        class={flex({
          alignItems: "center",
          textStyle: "headerAndFooter",
          color: "basicText",
          h: { base: "30px", md: "headerHeight" },
          mt: { base: "15px", md: "0px" },
        })}
      >
        <a
          class={css({
            mr: "20px",
            pb: "headerOptionsPaddingBottom",
          })}
          href="/sobre">sobre</a
        >
        <ThemeSelect />
      </div>
    </header>
    <main class={css({ flex: "1 0 auto" })}>
      <slot />
    </main>
    <footer
      class={flex({
        flex: "none",
        textStyle: "headerAndFooter",
        color: "basicText",
        justifyContent: "space-between",
        flexDirection: { base: "column", md: "row" },
        bgColor: "footerBg",
        p: "20px",
        borderTopRadius: "lg",
        "& a": {
          textDecoration: "underline",
        },
        "& > div": {
          maxW: { base: "100%", md: "50%" },
        },
      })}
    >
      <div
        class={css({
          textAlign: { base: "center", md: "left" },
          order: { base: "2", md: "1" },
          mt: { base: "20px", md: "0" },
        })}
      >
        <h2 class={css({ fontWeight: "bold" })}>categorias</h2>
        <ul class={css({ listStyleType: "none" })}>
          {
            categorias.map(function (categoria, index) {
              // prettier-ignore
              //  (to avoid white-spaces in the inline element below)
              return (
                <span>{index ? ", " : ""}<a class={css({ textDecoration: "underline" })} href={`/categoria/${categoria.id}`}>{categoria.data.titulo}</a></span>
              )
            })
          }
        </ul>
      </div>
      <div
        class={css({
          textAlign: { base: "center", md: "right" },
          order: { base: "1", md: "2" },
        })}
      >
        <p>escrito por <a href="/sobre">Dauro Veras</a></p>
        <p>
          desenvolvido por <a
            href="https://www.fabricioboppre.net"
            target="_blank">Fabricio C. Boppré</a
          >
        </p>
        <p>
          licença <a
            href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.pt-br"
            target="_blank">CC BY-NC-ND 4.0</a
          >
        </p>
        <p><a href="/rss.xml">RSS</a></p>
      </div>
    </footer>
  </body>
</html>
